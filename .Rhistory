x <- 5
t <- 94.32
lambda <- x/t
round( lambda + c(-1,1) * qnorm(0.975) *sqrt(lambda/t),3)
x <- 10
x <- 600
lambda <- 10
poison.text( x, lambda )
poisson.text( x, lambda )
poisson.test(x, lambda)
poisson.test(x, lambda)$conf
x <- 10
x <- 600
t <- 60
lambda <- x/t
lambda
poisson.test(x, lamda).conf
poisson.test(x, lambda)$conf
poisson.test(x, 1)$conf
x <- 10
t <- 60
lambda <- x/t
poisson.test( x, T= 1)$conf
dnorm(-1)
?dnorm
dnorm(0)
dnorm(0)
pnorm(0)
pnorm(-1)
qnorm(0.95)
qnorm(0.95)*75 + 1100
qnorm(0.95) * .75 + 1100
qnorm(0.95)
qnorm(0.95) * 7.5 + 1100
3/16
2 * pnorm(1)
pnorm(1)
pnorm(3)
pnorm(1)
2 -  1 * pnorm(1)
pnorm(1)
1-  pnorm(1)
qnorm(1)
pnorm(1)
?pnorm
dnorm(1)
pnorm(1) - pnorm(-1)
1/12
1/12 / sqrt(100)
1/12/sqrt(10)
1/12/sqrt(1000)
?ppoission
?poission
?poisson
?ppoisson
?ppois
dpois( 10, 15 )
ppois(10,15)
ppois(15,15)
dpois(15,15)
qpois(15,15)
qpois(0.5,15)
ppois(15,15)
dpois(15,15)
ppois(10,15)
qnorm(-1)
pnorm(-1)
qnorm(0.95)* 75 + 1100
qnorm(.95)*7.5+1100
3/16
pnorm(1)-pnorm(-1)
sqrt(1/12000)
sqrt(1/12)
sqrt(1/1200)
ppois(15, 10)
?ppois
ppois(15,15)
ppois(10,15)
exit
quit()
?t.test
?pt
qt(0.025)
qt(0.025,8)
qt(0.975,8)
qt(0.975,8) * 10 + 1100
2 / qt(0.95,8)
2 / qt(0.95,8) * 3
2 / qt(0.975,8) * 3
qt(0.975,9)
s2x <- .6
s2y <- .68
nx <- 10
ny <- 10
sp <- ( s2x / nx + s2y / ny ) / ( (s2x/ny)^2 / (nx-1) + (s2y/ny)^2 / (ny-1))
sp
sp <- ( s2x / nx + s2y / ny ) / (( ((s2x/ny)^2) / (nx-1)) + ((s2y/ny)^2 / (ny-1)))
sp
sp <- ( (s2x / nx) + (s2y / ny) ) / (( ((s2x/ny)^2) / (nx-1)) + ((s2y/ny)^2 / (ny-1)))
sp
sp <- ( (s2x / nx) + (s2y / ny) )^2 / (( ((s2x/ny)^2) / (nx-1)) + ((s2y/ny)^2 / (ny-1)))
sp
a <- s2x / nx
a
b <- s2y / ny
sp <- ((a+b)^2) / (( (a^2) / (nx-1) ) + ((b^2)/(ny-1)))
sp
sp <- sqrt((a+b)^2) / (( (a^2) / (nx-1) ) + ((b^2)/(ny-1)))
sp
sp <- ((a+b)^2) / (( (a^2) / (nx-1) ) + ((b^2)/(ny-1)))
sig <- sqrt(sq)
sig <- sqrt(sp)
sig
sp <- sqrt( (nx-1)*s2x+(ny-1)*s2y) / (nx+ny-1) )
sp <- sqrt( ((nx-1)*s2x+(ny-1)*s2y) / (nx+ny-1) )
sp
sig <- sp * sqrt( 1/nx + 1/ny )
sig
sig * qt(0.975,18)
-2 + sig * qt(0.975,18)
-2 + sig * qt(0.025,18)
s2x <- .5
s2x <- 2
s2y <- .5
nx <- 100
ny <- 100
a <- s2x / nx
b <- s2y / ny
sp <- ((a+b)^2) / (( (a^2) / (nx-1) ) + ((b^2)/(ny-1)))
sp
sp <- ((a+b)^2) / (( (a^2) / (nx-1) ) + ((b^2)/(ny-1)))
sp
sqrt(sp)
sp <- ((nx-1)*s2x+(ny-1)*s2y) / 16
sp
sqrt(sp)
sig <- sqrt( sp * ((1/nx)+(1/ny)))
sig
?qnorm
qnorm(0.95,0,sd = sig)
qnorm(0.95,0,sd = sig) -4
quit()
qt(0.975, 8)*30 + 1100
- qt(0.975, 8)*30 + 1100
2 / qt(0.975,8)
qt(.975)
qt(.975,8)
2 / qt(0.95,8)
2 / qt(0.975,8)
(2 / qt(0.975,8) )^2
t(0.975,8)*10+1100
qt(0.975,8)*10+1100
6 / qt(0.975,8)
sp <- sqrt( 1.28 / 2)
sp
-2 + qt(0.975,18) * sp * (2/9)
-2 + qt(0.975,18) * sp * (.2)
sp <- sqrt( (.6^2+.68^2) / 2)
sp
-2 + qt(0.975,18) * sp * (.2)
(.68)^2 + (.6)^2
sp <- sqrt( .8244 /2 )
sp
sp * (.2) * qt(0.975,18)
-2 + sp * (.2) * qt(0.975,18)
sp <- sqrt ( 1.28/ 2 )
sp
-2 + sp * (.2) * qt(0.975,18)
qt(0.975,18)
qt(0.975,18) * .16
-2.7-1.29
-3.99/2
-2.75-1.25
qt(0.975,18) * .8 * sqrt(.2) -2
qt(.95,10)
qt(0.975,10)
a <- ((.5^2)/100)
a
b <- .04
df <- 99 * (a+b)^2 / (a^2+b^2)
df
sqrt(4.25)
sqrt(4.25)/10
sqrt(4.25)/10 * qt(0.975,111)
1.5^2 + 1.8^2
sp <- sqrt ( (1.5^2 + 1.8^2) /2 )
sp
qt(0.95,16) * sp * sqrt( 2/9)
qt(0.95,16) * sp * sqrt( 2/9) + 2
qt(0.95,16) * sp * sqrt( 2/9) -4
quit()
Suject <- c(1:5)
Subject
subject <- c(1:5)
baseline <- c(140,138,150,148,135)
week2 <- (132,135,151,146,130)
week2 <- x(132,135,151,146,130)
week2 <- c(132,135,151,146,130)
df <- as.data.frame( cibnd(subject, baesline, week2))
df <- as.data.frame( cbind(subject, baesline, week2))
df <- as.data.frame( cbind(subject, baseline, week2))
df
?t.test
t.test(df$baseline, df$week2, paired=TRUE)
qt(0.975,8) *  30 / sqrt(8)
qt(0.975,8) *  30 / sqrt(8) + 1100
qt(0.975,8) *  30 / sqrt(9) + 1100
coke <- c(1,1,1, 0)
pepsi <- c(0,0,0,1)
?t.test
t.test( coke, pespi, alternative = c("greater"), paired = TRUE)
t.test( coke, pepsi, alternative = c("greater"), paired = TRUE)
t.test( coke, pepsi, alternative = c("less"), paired = TRUE)
t.test( coke, pepsi, alternative = c("greater"), mu =0 ,paired = TRUE)
t.test( coke, pepsi, alternative = c("greater"), mu =0 )
?t.test
t.test(baseline, week2, paired=TRUE)
qt(0.975,8) *  30 / sqrt(9) + 1100
t.test( coke, pepsi, alternative = c("greater"), mu =0 )
?ppois
ppois( 9, lambda = 17.87)
qpois( 9, lambda = 17.87)
ppois(10, lambda = 17.87)
?power.t.test
power.t.test( n=9, delta= -4, sd=sqrt((1.5^2+1.8^2)/2), type="two.sample", alternative="two.sided")
power.t.test( n=9, delta= -4, sd=sqrt((1.5^2+1.8^2)/2), type="two.sample", alternative="two.sided")$power
?t.test
?power.t.test
?t.test
?qt
dt(-4, 8)
sig <- sqrt((1.5^2+1.8^2)/2)
sig
-4 * 3 / sig
dt( -4 * 3 / sig , 8)
power.t.test(n=100, d=0.01, sd=0.04, sig.level=.05, alternative="greater")
?power.t.test
power.t.test(n=100, d=0.01, sd=0.04, sig.level=.05, alternative="one.sided", type="paired")
power.t.test(d=0.01, sd=0.04, sig.level=.05, alternative="one.sided", type="paired", power=.9)
?t.test
?power.t.test
power.t.test(n=288,delta=44-42.04, sd=12, type="two.sample", alternative="two.sided")
pt((44-42.04)/sqrt(2),287)
2 * (1-pt((44-42.04)/sqrt(2),287))
2 * (1-pt((44-42.04)/sqrt(2),287*2))
quit
quit()
setwd("F:\\Coursera\\repro\\RepData_PeerAssessment1\\")
upzip("activity.zip")
unzip("activity.zip")
df <- read.csv("activity.csv")
head(df)
tail(df)
dfn <- df[ complete.cases(df), ]
head(dfn)
tail(dfn)
ddata <- ddply(data = dfn, variablees = (steps,date),summarize,mean)
ddata <- ddply(data = dfn, variablees = .(steps,date) , summarize , mean)
library(plyr)
ddata <- ddply(data = dfn, variablees = (steps,date) , summarize , mean)
ddata <- ddplyd(dfn, .(steps,date) , summarize , mean)
ddata <- ddply(dfn, .(steps,date) , summarize , mean)
ddata <- ddply(dfn, .(steps) , summarize , mean)
ddata <- ddply(dfn, .date , summarize , mean = mean(steps) )
head(dfn)
ddata <- ddply(dfn, .(date) , summarize , mean = mean(steps) )
head(ddata)
hist(ddata)
hist(ddata$mean)
hist(ddata$mean, breaks=53, color="green")
hist(ddata$mean, breaks=53, colour="green")
hist(ddata$mean, breaks=53, col="green")
hist(ddata$mean, breaks=10, col="green")
hist(ddata$mean, breaks=10, col="green", title="Average Daily Steps Histogram")
hist(ddata$mean, breaks=10, col="green", main="Average Daily Steps Histogram")
hist(ddata$mean, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Steps")
hist(ddata$mean, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Number of Steps")
print("mean of daily steps is %.2f and median is %.2f", mean(dfn$steps), median(dfn$steps))
print("mean of daily steps is", mean(dfn$steps), " and median is", median(dfn$steps))
mean(dfn$steps)
median(dfn$steps)
ddata <- ddply(dfn, .(date) , summarize , mean = sum(steps) )
print("mean of daily steps is", mean(ddata$steps), " and median is", median(ddata$steps))
median(ddata$steps)
mean(ddata$steps)
ddata <- ddply(dfn, .(date) , summarize , mean = sum(steps) )
mean(ddata$steps)
head(ddata,30)
print("mean of daily steps is", mean(ddata$sum), " and median is", median(ddata$sum))
ddata <- ddply(dfn, .(date) , summarize , sum = sum(steps) )
print("mean of daily steps is", mean(ddata$sum), " and median is", median(ddata$sum))
print("mean of daily steps is", mean(ddata$sum), digits=2 " and median is", median(ddata$sum), digits=2)
print("mean of daily steps is", mean(ddata$sum), digits=2 ," and median is", median(ddata$sum), digits=2)
print("mean of daily steps is", mean(ddata$sum), " and median is", median(ddata$sum), digits=2)
print("mean of daily steps is", mean(ddata$sum), " and median is", median(ddata$sum), digits=2)
print("mean of daily steps is %f", mean(ddata$sum), " and median is", median(ddata$sum), digits=2)
sprintf("mean of daily steps is ", mean(ddata$sum), " and median is", median(ddata$sum), digits=2)
sprintf("mean of daily steps is %f", mean(ddata$sum), " and median is", median(ddata$sum), digits=2)
sprintf("mean of daily steps is %0.2f and median is %.02f", mean(ddata$sum), median(ddata$sum), digits=2)
head(dfn)
head(df)
ddata <- ddply(dfn, .(date) , summarize , mean = mean(steps) )
ts( ddata$mean )
ts.plot( ddata$mean )
head(ddata)
ddata <- ddply(dfn, .(interval) , summarize , mean = mean(steps) )
ts.plot( ddata$mean )
ts.plot( ddata$mean xy.labels=c("Daily Interval","Average Stesp")))
ts.plot( ddata$mean , xy.labels=c("Daily Interval","Average Stesp")))
ts.plot( ddata$mean , xy.labels=c("Daily Interval","Average Stesp"))
ts.plot( ddata$mean , main = "Average steps per time interval")
ts.plot( ddata$mean , main = "Average Steps per Time Interval", xy.labels=c("Interval","Steps"))
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=c("Interval","Steps"))
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=c("Interval","Steps"))
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=TRUE, xlabel="Interval")
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=TRUE, title(xlabel="Interval"))
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=TRUE)
plot.ts( ddata$mean , main = "Average Steps per Time Interval", xy.labels=FALSE)
ddata[ ddata$mean = max(ddata$mean) ,]
ddata[ ddata$mean == max(ddata$mean) ,]
ddata[ ddata$mean = max(ddata$mean) ,]$interval
ddata[ ddata$mean == max(ddata$mean) ,]$interval
df
head(df, 30)
head(ddata, 30)
sprintf("Maximum number of steps is on : %0.2f", ddata[ ddata$mean == max(ddata$mean) ,]$interval )
sprintf("Maximum number of steps is on : %d", ddata[ ddata$mean == max(ddata$mean) ,]$interval )
sprintf("There are %d rows with missing values", nrow(dfn)-nrow(df))
sprintf("There are %d rows with missing values", nrow(df)-nrow(dfn))
sprintf("There are %d rows with missing values.\n", nrow(df)-nrow(dfn))
nrow( df[is.na(df$steps),])
dfnomis <- df
head(ddata)
head(dfnomis)
?merge
dfnomis <- merge(df, ddata)
head(dfnomis)
dfnomis[ is.na(dfnomis$steps),"steps"] <- dfnomis[is.na(dfnomis$steps),mean]
dfnomis[ is.na(dfnomis$steps),"steps"] <- dfnomis[is.na(dfnomis$steps),"mean"]
head(dfnomis)
dfnomis$mean <- NULL
ddata <- ddply(dfn, .(date) , summarize , sum = sum(steps) )
hist(ddata$sum, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Number of Steps")
sprintf("mean of daily steps is %0.2f and median is %.02f", mean(ddata$sum), median(ddata$sum), digits=2)
dfn <- df[ complete.cases(df), ]
ddata <- ddply(dfn, .(date) , summarize , mean = mean(steps) )
hist(ddata$mean, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Number of Steps")
ddata <- ddply(dfn, .(date) , summarize , sum = sum(steps) )
sprintf("mean of daily steps is %0.2f and median is %.02f", mean(ddata$sum), median(ddata$sum), digits=2)
df  <- read.csv("activity.csv")
dfn <- df[ complete.cases(df), ]
ddata <- ddply(dfn, .(date) , summarize , mean = mean(steps) )
hist(ddata$mean, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Number of Steps")
ddata <- ddply(dfn, .(date) , summarize , sum = sum(steps) )
sprintf("mean of daily steps is %0.2f and median is %.02f", mean(ddata$sum), median(ddata$sum), digits=2)
oldmean <- mean(ddata$sum)
oldmedian <- median(ddata$sum)
sprintf("There are %d rows with missing values.", nrow(df)-nrow(dfn))
ddata <- ddply(dfn, .(interval) , summarize , mean = mean(steps) )
dfnomis <- merge(df, ddata)
dfnomis[ is.na(dfnomis$steps),"steps"] <- dfnomis[is.na(dfnomis$steps),"mean"]
dfnomis$mean <- NULL
ddata <- ddply(dfn, .(date) , summarize , sum = sum(steps) )
hist(ddata$sum, breaks=10, col="green", main="Average Daily Steps Histogram", xlab="Number of Steps")
sprintf("Mean of daily steps is %0.2f and median is %.02f", mean(ddata$sum), median(ddata$sum), digits=2)
sprintf("The changes because of filling missing values are: mean: %f and median %f", mean(ddata$sum)-oldmean, median(ddata$sum)-oldmeadian )
sprintf("The changes because of filling missing values are: mean: %f and median %f", mean(ddata$sum)-oldmean, median(ddata$sum)-oldmedian )
head( weekdays(dfnomis$date)
)
head( weekdays(df$date) )
class(df$date)
dfnomis$date <- as.Date(dfnomis$date)
head( weekdays(df$date) )
head( weekdays(dfnomis$date)
)
head( weekdays(dfnomis$date) %in% c("Sunday", "Saturday") )
dfnomis$isweekend <- weekdays(dfnomis$date) %in% c("Sunday", "Saturday")
head( dfnomis)
dfnomis$isweekend <- factor( dfnomis$isweekend, levels=c("weekday","weekend"))
head( dfnomis)
dfnomis$isweekend <- factor( weekdays(dfnomis$date) %in% c("Sunday", "Saturday") )
head( dfnomis )
dfnomis$isweekend <- factor( weekdays(dfnomis$date) %in% c("Sunday", "Saturday"), levels=c("weekday","weekend") )
head( dfnomis )
dfnomis$isweekend <- factor( weekdays(dfnomis$date) %in% c("Sunday", "Saturday"))
dfnomis$isweekend <- factor( weekdays(dfnomis$date) %in% c("Sunday", "Saturday"), labels=c("weekday","weekend"))
head( dfnomis )
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekday" ,], .(interval) , summarize , mean = mean(steps) )
par(mfrow=c(2,1))
plot.ts( ddata$mean , main = "Average Steps per Time Interval")
par(mfrow=c(1,2))
plot.ts( ddata$mean , main = "Average Steps per Time Interval")
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekday" ,], .(interval) , summarize , mean = mean(steps) )
par(mfrow=c(2,1))
plot.ts( ddata$mean , main = "Average Steps in Weekdays")
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekend" ,], .(interval) , summarize , mean = mean(steps) )
plot.ts( ddata$mean , main = "Average Steps in Weekends")
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekday" ,], .(interval) , summarize , mean = mean(steps) )
par(mfrow=c(2,1))
plot.ts( ddata$mean , main = "Average Steps in Weekdays")
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekend" ,], .(interval) , summarize , mean = mean(steps) )
plot.ts( ddata$mean , main = "Average Steps in Weekends")
par(mfrow=c(2,1),mar = rep(2, 4))
plot.ts( ddata$mean , main = "Average Steps in Weekdays")
ddata <- ddply(dfnomis[dfnomis$isweekend == "weekend" ,], .(interval) , summarize , mean = mean(steps) )
plot.ts( ddata$mean , main = "Average Steps in Weekends")
head( dfnomis[dfnomis$isweekend == "weekend" ,] )
selected <- dfnomis[dfnomis$isweekend == "weekday" ,]
ddata <- ddply(selected, .(interval) , summarize , mean = mean(steps) )
par(mfrow=c(2,1),mar = rep(2, 4))
plot.ts( ddata$mean , main = "Average Steps in Weekdays")
selected <- dfnomis[dfnomis$isweekend == "weekend" ,]
ddata <- ddply(selected, .(interval) , summarize , mean = mean(steps) )
plot.ts( ddata$mean , main = "Average Steps in Weekends")
```
quit()
